<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <!-- Admin Navigation -->
  <.admin_nav current_page={:market_data} />

  <!-- Header -->
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-900">Market Data Dashboard</h1>
    <p class="mt-2 text-sm text-gray-600">
      Capture market snapshots for classified content
    </p>
    <div class="mt-3 p-4 bg-yellow-50 border-l-4 border-yellow-400">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <p class="text-sm text-yellow-700">
            <strong>‚ö†Ô∏è  Warning:</strong> Market data operations call external APIs and consume credits.
            Each content item √ó <%= @asset_count %> assets √ó 4 time windows = <%= @asset_count * 4 %> API calls per content.
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Queue Statistics -->
  <div class="mb-8">
    <h2 class="text-xl font-semibold text-gray-900 mb-4">Queue Health</h2>
    <div class="grid grid-cols-1 gap-4">
      <%= for queue <- @queue_stats do %>
        <div class="bg-white shadow rounded-lg p-6 border border-gray-200">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-semibold text-gray-900">
              <%= queue_status_icon(queue) %> <%= queue.name %>
            </h3>
          </div>

          <div class="grid grid-cols-2 md:grid-cols-3 gap-3 text-sm">
            <div class="flex justify-between">
              <span class="text-gray-600">Available:</span>
              <span class="font-medium text-blue-600"><%= queue.available %></span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Executing:</span>
              <span class="font-medium text-yellow-600"><%= queue.executing %></span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Completed (24h):</span>
              <span class="font-medium text-green-600"><%= queue.completed %></span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Retryable:</span>
              <span class="font-medium text-orange-600"><%= queue.retryable %></span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Scheduled:</span>
              <span class="font-medium text-purple-600"><%= queue.scheduled %></span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Discarded:</span>
              <span class="font-medium text-red-600"><%= queue.discarded %></span>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Market Snapshot Capture Form -->
  <div class="mb-8">
    <div class="bg-white shadow rounded-lg p-6 border border-gray-200">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">üì∏ Capture Market Snapshots</h2>
      <p class="text-sm text-gray-600 mb-4">
        Capture OHLCV data from TwelveData API for classified content at 4 time windows (before, 1hr, 4hr, 24hr after publication).
      </p>

      <.form for={@snapshot_form} phx-submit="enqueue_snapshots" phx-change="update_snapshot_limit" class="space-y-4">
        <!-- Content Selection -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Content to Capture</label>
          <select
            name="snapshot[limit]"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm"
          >
            <option value="missing" selected={@snapshot_limit == :missing}>
              Missing Snapshots Only (<%= @missing_snapshots_count %> items) - Recommended
            </option>
            <option value="10" selected={@snapshot_limit == 10}>Most Recent 10 Classified</option>
            <option value="50" selected={@snapshot_limit == 50}>Most Recent 50 Classified</option>
            <option value="100" selected={@snapshot_limit == 100}>Most Recent 100 Classified</option>
            <option value="ids" selected={@snapshot_limit == :ids}>Specific IDs</option>
          </select>
          <p class="mt-1 text-xs text-gray-500">
            Choose "Missing Snapshots" to fix incomplete captures (&lt;<%= @asset_count * 4 %> snapshots per content)
          </p>
        </div>

        <!-- Content IDs (conditional) -->
        <%= if @snapshot_limit == :ids do %>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              Content IDs (comma-separated)
            </label>
            <input
              type="text"
              name="snapshot[content_ids]"
              placeholder="165,166,167"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm"
            />
          </div>
        <% end %>

        <!-- API Cost Estimator -->
        <div class="p-4 bg-red-50 border border-red-200 rounded-md">
          <p class="text-sm text-red-800 mb-2">
            <strong>üí∏ API Cost Estimate</strong>
          </p>
          <div class="text-sm text-red-700 space-y-1">
            <p><strong>Active Assets:</strong> <%= @asset_count %> (SPY, QQQ, DIA, VXX, GLD, etc.)</p>
            <p><strong>Time Windows:</strong> 4 (before, 1hr, 4hr, 24hr after)</p>
            <p><strong>API Calls per Content:</strong> <%= @asset_count %> √ó 4 = <%= @asset_count * 4 %> calls</p>
            <%= if @snapshot_limit == :missing do %>
              <p class="pt-2 border-t border-red-300">
                <strong>Total for Missing Snapshots:</strong> <%= @missing_snapshots_count %> content √ó <%= @asset_count * 4 %> = <span class="text-lg font-bold"><%= @missing_snapshots_count * @asset_count * 4 %> API calls</span>
              </p>
            <% end %>
            <%= if is_integer(@snapshot_limit) do %>
              <p class="pt-2 border-t border-red-300">
                <strong>Total for <%= @snapshot_limit %> Content:</strong> <%= @snapshot_limit %> √ó <%= @asset_count * 4 %> = <span class="text-lg font-bold"><%= @snapshot_limit * @asset_count * 4 %> API calls</span>
              </p>
            <% end %>
          </div>
        </div>

        <!-- Rate Limit Warning -->
        <div class="p-3 bg-blue-50 border border-blue-200 rounded-md">
          <p class="text-sm text-blue-800">
            <strong>üìä Rate Limits:</strong> TwelveData allows 8 calls/minute, 800/day on free tier.
            Plan accordingly to avoid exhausting your daily quota.
          </p>
        </div>

        <!-- Force Checkbox -->
        <div class="flex items-center">
          <input
            type="checkbox"
            name="snapshot[force]"
            value="true"
            id="snapshot-force-checkbox"
            class="h-4 w-4 rounded border-gray-300 text-green-600 focus:ring-green-500"
          />
          <label for="snapshot-force-checkbox" class="ml-2 block text-sm text-gray-700">
            Force recapture (overwrite existing snapshots - will double your API usage)
          </label>
        </div>

        <!-- Submit Button -->
        <div class="flex justify-end">
          <button
            type="submit"
            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
          >
            üì∏ Enqueue Market Data Jobs
          </button>
        </div>
      </.form>
    </div>
  </div>

  <!-- Recent Jobs -->
  <div>
    <div class="bg-white shadow rounded-lg border border-gray-200">
      <div class="px-6 py-4 border-b border-gray-200">
        <h2 class="text-xl font-semibold text-gray-900">Recent Market Data Jobs</h2>
        <p class="mt-1 text-sm text-gray-600">
          Last 20 market snapshot capture jobs (updates every 3 seconds)
        </p>
      </div>

      <div class="divide-y divide-gray-200">
        <%= if length(@recent_jobs) == 0 do %>
          <div class="px-6 py-8 text-center text-gray-500">
            No jobs found. Enqueue a snapshot capture job to get started.
          </div>
        <% else %>
          <%= for job <- @recent_jobs do %>
            <div class="px-6 py-4 hover:bg-gray-50">
              <div class="flex items-start justify-between">
                <div class="flex-1 min-w-0">
                  <!-- Job Header -->
                  <div class="flex items-center space-x-3 mb-2">
                    <span class="text-xl"><%= state_icon(job.state) %></span>
                    <span class={[
                      "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium",
                      state_badge_class(job.state)
                    ]}>
                      <%= job.state %>
                    </span>
                    <span class="font-medium text-gray-900">
                      #<%= job.id %> - <%= worker_name(job.worker) %>
                    </span>
                    <span class="text-sm text-gray-500">
                      <%= job.queue %>
                    </span>
                  </div>

                  <!-- Job Details -->
                  <div class="text-sm text-gray-600 space-y-1">
                    <div>
                      <span class="font-medium">Content:</span>
                      <%= job_content_info(job.args) %>
                    </div>
                    <div>
                      <span class="font-medium">Scheduled:</span>
                      <%= format_datetime(job.scheduled_at) %>
                      <span class="text-gray-400">(<%= relative_time(job.inserted_at) %>)</span>
                    </div>
                    <%= if job.attempt > 0 do %>
                      <div>
                        <span class="font-medium">Attempts:</span>
                        <%= job.attempt %> / <%= job.max_attempts %>
                      </div>
                    <% end %>
                    <%= if job.state == "executing" && job.attempted_at do %>
                      <div class="text-yellow-600">
                        ‚è±Ô∏è Started: <%= format_datetime(job.attempted_at) %>
                        (<%= relative_time(job.attempted_at) %>)
                      </div>
                    <% end %>
                    <%= if job.state == "completed" && job.completed_at do %>
                      <div class="text-green-600">
                        ‚úÖ Completed: <%= format_datetime(job.completed_at) %>
                        (<%= relative_time(job.completed_at) %>)
                      </div>
                    <% end %>
                    <%= if job.state in ["retryable", "discarded"] && job.errors do %>
                      <% latest_error = List.first(job.errors) %>
                      <%= if latest_error do %>
                        <div class="mt-2 p-2 bg-red-50 border border-red-200 rounded text-xs text-red-800">
                          <span class="font-medium">Error:</span>
                          <%= String.slice(latest_error["error"] || "Unknown error", 0..200) %>
                        </div>
                      <% end %>
                    <% end %>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>

      <!-- Footer with Link to Oban Web -->
      <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
        <p class="text-sm text-gray-600">
          For advanced job management and full history, visit the
          <a href="/admin/oban" class="text-indigo-600 hover:text-indigo-700 font-medium">
            Oban Web Dashboard ‚Üí
          </a>
        </p>
      </div>
    </div>
  </div>
</div>

<%!--
  LiveToast component must be placed in the LiveView template, not in the root layout.
--%>
<LiveToast.toast_group flash={@flash} connected={true} kinds={[:info, :error, :success, :warning]} toasts_sync={assigns[:toasts_sync]} />
